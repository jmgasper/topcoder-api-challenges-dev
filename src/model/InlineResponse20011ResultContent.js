/*
 * ap-challenge-microservice
 * Services that provide access and interaction with all sorts of challenges, including design, dev, single round matches, and marathon matches. 
 *
 * OpenAPI spec version: 1.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse20011ResultContentCheckpoints', 'model/InlineResponse20011ResultContentDocuments', 'model/InlineResponse20011ResultContentEvent', 'model/InlineResponse20011ResultContentPhases', 'model/InlineResponse20011ResultContentRegistrants', 'model/InlineResponse20011ResultContentSubmissions1', 'model/InlineResponse20011ResultContentTerms', 'model/InlineResponse20011ResultContentWinners'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InlineResponse20011ResultContentCheckpoints'), require('./InlineResponse20011ResultContentDocuments'), require('./InlineResponse20011ResultContentEvent'), require('./InlineResponse20011ResultContentPhases'), require('./InlineResponse20011ResultContentRegistrants'), require('./InlineResponse20011ResultContentSubmissions1'), require('./InlineResponse20011ResultContentTerms'), require('./InlineResponse20011ResultContentWinners'));
  } else {
    // Browser globals (root is window)
    if (!root.ApChallengeMicroservice) {
      root.ApChallengeMicroservice = {};
    }
    root.ApChallengeMicroservice.InlineResponse20011ResultContent = factory(root.ApChallengeMicroservice.ApiClient, root.ApChallengeMicroservice.InlineResponse20011ResultContentCheckpoints, root.ApChallengeMicroservice.InlineResponse20011ResultContentDocuments, root.ApChallengeMicroservice.InlineResponse20011ResultContentEvent, root.ApChallengeMicroservice.InlineResponse20011ResultContentPhases, root.ApChallengeMicroservice.InlineResponse20011ResultContentRegistrants, root.ApChallengeMicroservice.InlineResponse20011ResultContentSubmissions1, root.ApChallengeMicroservice.InlineResponse20011ResultContentTerms, root.ApChallengeMicroservice.InlineResponse20011ResultContentWinners);
  }
}(this, function(ApiClient, InlineResponse20011ResultContentCheckpoints, InlineResponse20011ResultContentDocuments, InlineResponse20011ResultContentEvent, InlineResponse20011ResultContentPhases, InlineResponse20011ResultContentRegistrants, InlineResponse20011ResultContentSubmissions1, InlineResponse20011ResultContentTerms, InlineResponse20011ResultContentWinners) {
  'use strict';

  /**
   * The InlineResponse20011ResultContent model module.
   * @module model/InlineResponse20011ResultContent
   * @version 1.0.5
   */

  /**
   * Constructs a new <code>InlineResponse20011ResultContent</code>.
   * @alias module:model/InlineResponse20011ResultContent
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>InlineResponse20011ResultContent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse20011ResultContent} obj Optional instance to populate.
   * @return {module:model/InlineResponse20011ResultContent} The populated <code>InlineResponse20011ResultContent</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('subTrack'))
        obj.subTrack = ApiClient.convertToType(data['subTrack'], 'String');
      if (data.hasOwnProperty('challengeTitle'))
        obj.challengeTitle = ApiClient.convertToType(data['challengeTitle'], 'String');
      if (data.hasOwnProperty('challengeId'))
        obj.challengeId = ApiClient.convertToType(data['challengeId'], 'Number');
      if (data.hasOwnProperty('projectId'))
        obj.projectId = ApiClient.convertToType(data['projectId'], 'Number');
      if (data.hasOwnProperty('forumId'))
        obj.forumId = ApiClient.convertToType(data['forumId'], 'Number');
      if (data.hasOwnProperty('introduction'))
        obj.introduction = ApiClient.convertToType(data['introduction'], 'String');
      if (data.hasOwnProperty('detailedRequirements'))
        obj.detailedRequirements = ApiClient.convertToType(data['detailedRequirements'], 'String');
      if (data.hasOwnProperty('finalSubmissionGuidelines'))
        obj.finalSubmissionGuidelines = ApiClient.convertToType(data['finalSubmissionGuidelines'], 'String');
      if (data.hasOwnProperty('screeningScorecardId'))
        obj.screeningScorecardId = ApiClient.convertToType(data['screeningScorecardId'], 'Number');
      if (data.hasOwnProperty('reviewScorecardId'))
        obj.reviewScorecardId = ApiClient.convertToType(data['reviewScorecardId'], 'Number');
      if (data.hasOwnProperty('cmcTaskId'))
        obj.cmcTaskId = ApiClient.convertToType(data['cmcTaskId'], 'Number');
      if (data.hasOwnProperty('numberOfCheckpointsPrizes'))
        obj.numberOfCheckpointsPrizes = ApiClient.convertToType(data['numberOfCheckpointsPrizes'], 'Number');
      if (data.hasOwnProperty('topCheckPointPrize'))
        obj.topCheckPointPrize = ApiClient.convertToType(data['topCheckPointPrize'], 'Number');
      if (data.hasOwnProperty('postingDate'))
        obj.postingDate = ApiClient.convertToType(data['postingDate'], 'Date');
      if (data.hasOwnProperty('registrationEndDate'))
        obj.registrationEndDate = ApiClient.convertToType(data['registrationEndDate'], 'Date');
      if (data.hasOwnProperty('checkpointSubmissionEndDate'))
        obj.checkpointSubmissionEndDate = ApiClient.convertToType(data['checkpointSubmissionEndDate'], 'Date');
      if (data.hasOwnProperty('submissionEndDate'))
        obj.submissionEndDate = ApiClient.convertToType(data['submissionEndDate'], 'Date');
      if (data.hasOwnProperty('submissionsViewable'))
        obj.submissionsViewable = ApiClient.convertToType(data['submissionsViewable'], 'Boolean');
      if (data.hasOwnProperty('reviewType'))
        obj.reviewType = ApiClient.convertToType(data['reviewType'], 'String');
      if (data.hasOwnProperty('environment'))
        obj.environment = ApiClient.convertToType(data['environment'], 'String');
      if (data.hasOwnProperty('codeRepo'))
        obj.codeRepo = ApiClient.convertToType(data['codeRepo'], 'String');
      if (data.hasOwnProperty('allowStockArt'))
        obj.allowStockArt = ApiClient.convertToType(data['allowStockArt'], 'String');
      if (data.hasOwnProperty('filetypes'))
        obj.filetypes = ApiClient.convertToType(data['filetypes'], ['String']);
      if (data.hasOwnProperty('forumLink'))
        obj.forumLink = ApiClient.convertToType(data['forumLink'], 'String');
      if (data.hasOwnProperty('appealsEndDate'))
        obj.appealsEndDate = ApiClient.convertToType(data['appealsEndDate'], 'Date');
      if (data.hasOwnProperty('finalFixEndDate'))
        obj.finalFixEndDate = ApiClient.convertToType(data['finalFixEndDate'], 'Date');
      if (data.hasOwnProperty('submissionLimit'))
        obj.submissionLimit = ApiClient.convertToType(data['submissionLimit'], 'Number');
      if (data.hasOwnProperty('currentStatus'))
        obj.currentStatus = ApiClient.convertToType(data['currentStatus'], 'String');
      if (data.hasOwnProperty('drPoints'))
        obj.drPoints = ApiClient.convertToType(data['drPoints'], 'Number');
      if (data.hasOwnProperty('reliabilityBonus'))
        obj.reliabilityBonus = ApiClient.convertToType(data['reliabilityBonus'], 'Number');
      if (data.hasOwnProperty('challengeCommunity'))
        obj.challengeCommunity = ApiClient.convertToType(data['challengeCommunity'], 'String');
      if (data.hasOwnProperty('directUrl'))
        obj.directUrl = ApiClient.convertToType(data['directUrl'], 'String');
      if (data.hasOwnProperty('technologies'))
        obj.technologies = ApiClient.convertToType(data['technologies'], ['String']);
      if (data.hasOwnProperty('prizes'))
        obj.prizes = ApiClient.convertToType(data['prizes'], ['Number']);
      if (data.hasOwnProperty('winners'))
        obj.winners = ApiClient.convertToType(data['winners'], [InlineResponse20011ResultContentWinners]);
      if (data.hasOwnProperty('currentPhaseName'))
        obj.currentPhaseName = ApiClient.convertToType(data['currentPhaseName'], 'String');
      if (data.hasOwnProperty('currentPhaseRemainingTime'))
        obj.currentPhaseRemainingTime = ApiClient.convertToType(data['currentPhaseRemainingTime'], 'Number');
      if (data.hasOwnProperty('currentPhaseEndDate'))
        obj.currentPhaseEndDate = ApiClient.convertToType(data['currentPhaseEndDate'], 'Date');
      if (data.hasOwnProperty('documents'))
        obj.documents = ApiClient.convertToType(data['documents'], [InlineResponse20011ResultContentDocuments]);
      if (data.hasOwnProperty('platforms'))
        obj.platforms = ApiClient.convertToType(data['platforms'], ['String']);
      if (data.hasOwnProperty('event'))
        obj.event = ApiClient.convertToType(data['event'], [InlineResponse20011ResultContentEvent]);
      if (data.hasOwnProperty('registrants'))
        obj.registrants = ApiClient.convertToType(data['registrants'], [InlineResponse20011ResultContentRegistrants]);
      if (data.hasOwnProperty('phases'))
        obj.phases = ApiClient.convertToType(data['phases'], [InlineResponse20011ResultContentPhases]);
      if (data.hasOwnProperty('terms'))
        obj.terms = ApiClient.convertToType(data['terms'], [InlineResponse20011ResultContentTerms]);
      if (data.hasOwnProperty('submissions'))
        obj.submissions = ApiClient.convertToType(data['submissions'], [InlineResponse20011ResultContentSubmissions1]);
      if (data.hasOwnProperty('checkpoints'))
        obj.checkpoints = ApiClient.convertToType(data['checkpoints'], [InlineResponse20011ResultContentCheckpoints]);
      if (data.hasOwnProperty('numberOfRegistrants'))
        obj.numberOfRegistrants = ApiClient.convertToType(data['numberOfRegistrants'], 'Number');
      if (data.hasOwnProperty('numberOfSubmissions'))
        obj.numberOfSubmissions = ApiClient.convertToType(data['numberOfSubmissions'], 'Number');
      if (data.hasOwnProperty('numberOfSubmitters'))
        obj.numberOfSubmitters = ApiClient.convertToType(data['numberOfSubmitters'], 'Number');
      if (data.hasOwnProperty('numberOfCheckpointSubmissions'))
        obj.numberOfCheckpointSubmissions = ApiClient.convertToType(data['numberOfCheckpointSubmissions'], 'Number');
      if (data.hasOwnProperty('pointPrizes'))
        obj.pointPrizes = ApiClient.convertToType(data['pointPrizes'], ['Number']);
    }
    return obj;
  }

  /**
   * @member {String} subTrack
   */
  exports.prototype.subTrack = undefined;

  /**
   * @member {String} challengeTitle
   */
  exports.prototype.challengeTitle = undefined;

  /**
   * @member {Number} challengeId
   */
  exports.prototype.challengeId = undefined;

  /**
   * @member {Number} projectId
   */
  exports.prototype.projectId = undefined;

  /**
   * @member {Number} forumId
   */
  exports.prototype.forumId = undefined;

  /**
   * @member {String} introduction
   */
  exports.prototype.introduction = undefined;

  /**
   * @member {String} detailedRequirements
   */
  exports.prototype.detailedRequirements = undefined;

  /**
   * @member {String} finalSubmissionGuidelines
   */
  exports.prototype.finalSubmissionGuidelines = undefined;

  /**
   * @member {Number} screeningScorecardId
   */
  exports.prototype.screeningScorecardId = undefined;

  /**
   * @member {Number} reviewScorecardId
   */
  exports.prototype.reviewScorecardId = undefined;

  /**
   * @member {Number} cmcTaskId
   */
  exports.prototype.cmcTaskId = undefined;

  /**
   * @member {Number} numberOfCheckpointsPrizes
   */
  exports.prototype.numberOfCheckpointsPrizes = undefined;

  /**
   * @member {Number} topCheckPointPrize
   */
  exports.prototype.topCheckPointPrize = undefined;

  /**
   * @member {Date} postingDate
   */
  exports.prototype.postingDate = undefined;

  /**
   * @member {Date} registrationEndDate
   */
  exports.prototype.registrationEndDate = undefined;

  /**
   * @member {Date} checkpointSubmissionEndDate
   */
  exports.prototype.checkpointSubmissionEndDate = undefined;

  /**
   * @member {Date} submissionEndDate
   */
  exports.prototype.submissionEndDate = undefined;

  /**
   * @member {Boolean} submissionsViewable
   */
  exports.prototype.submissionsViewable = undefined;

  /**
   * @member {String} reviewType
   */
  exports.prototype.reviewType = undefined;

  /**
   * @member {String} environment
   */
  exports.prototype.environment = undefined;

  /**
   * @member {String} codeRepo
   */
  exports.prototype.codeRepo = undefined;

  /**
   * @member {String} allowStockArt
   */
  exports.prototype.allowStockArt = undefined;

  /**
   * @member {Array.<String>} filetypes
   */
  exports.prototype.filetypes = undefined;

  /**
   * @member {String} forumLink
   */
  exports.prototype.forumLink = undefined;

  /**
   * @member {Date} appealsEndDate
   */
  exports.prototype.appealsEndDate = undefined;

  /**
   * @member {Date} finalFixEndDate
   */
  exports.prototype.finalFixEndDate = undefined;

  /**
   * @member {Number} submissionLimit
   */
  exports.prototype.submissionLimit = undefined;

  /**
   * @member {String} currentStatus
   */
  exports.prototype.currentStatus = undefined;

  /**
   * @member {Number} drPoints
   */
  exports.prototype.drPoints = undefined;

  /**
   * @member {Number} reliabilityBonus
   */
  exports.prototype.reliabilityBonus = undefined;

  /**
   * @member {String} challengeCommunity
   */
  exports.prototype.challengeCommunity = undefined;

  /**
   * @member {String} directUrl
   */
  exports.prototype.directUrl = undefined;

  /**
   * @member {Array.<String>} technologies
   */
  exports.prototype.technologies = undefined;

  /**
   * @member {Array.<Number>} prizes
   */
  exports.prototype.prizes = undefined;

  /**
   * @member {Array.<module:model/InlineResponse20011ResultContentWinners>} winners
   */
  exports.prototype.winners = undefined;

  /**
   * @member {String} currentPhaseName
   */
  exports.prototype.currentPhaseName = undefined;

  /**
   * @member {Number} currentPhaseRemainingTime
   */
  exports.prototype.currentPhaseRemainingTime = undefined;

  /**
   * @member {Date} currentPhaseEndDate
   */
  exports.prototype.currentPhaseEndDate = undefined;

  /**
   * @member {Array.<module:model/InlineResponse20011ResultContentDocuments>} documents
   */
  exports.prototype.documents = undefined;

  /**
   * @member {Array.<String>} platforms
   */
  exports.prototype.platforms = undefined;

  /**
   * @member {Array.<module:model/InlineResponse20011ResultContentEvent>} event
   */
  exports.prototype.event = undefined;

  /**
   * @member {Array.<module:model/InlineResponse20011ResultContentRegistrants>} registrants
   */
  exports.prototype.registrants = undefined;

  /**
   * @member {Array.<module:model/InlineResponse20011ResultContentPhases>} phases
   */
  exports.prototype.phases = undefined;

  /**
   * @member {Array.<module:model/InlineResponse20011ResultContentTerms>} terms
   */
  exports.prototype.terms = undefined;

  /**
   * @member {Array.<module:model/InlineResponse20011ResultContentSubmissions1>} submissions
   */
  exports.prototype.submissions = undefined;

  /**
   * @member {Array.<module:model/InlineResponse20011ResultContentCheckpoints>} checkpoints
   */
  exports.prototype.checkpoints = undefined;

  /**
   * @member {Number} numberOfRegistrants
   */
  exports.prototype.numberOfRegistrants = undefined;

  /**
   * @member {Number} numberOfSubmissions
   */
  exports.prototype.numberOfSubmissions = undefined;

  /**
   * @member {Number} numberOfSubmitters
   */
  exports.prototype.numberOfSubmitters = undefined;

  /**
   * @member {Number} numberOfCheckpointSubmissions
   */
  exports.prototype.numberOfCheckpointSubmissions = undefined;

  /**
   * @member {Array.<Number>} pointPrizes
   */
  exports.prototype.pointPrizes = undefined;

  return exports;

}));

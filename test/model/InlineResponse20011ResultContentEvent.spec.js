/*
 * ap-challenge-microservice
 * Services that provide access and interaction with all sorts of challenges, including design, dev, single round matches, and marathon matches. 
 *
 * OpenAPI spec version: 1.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApChallengeMicroservice);
  }
}(this, function(expect, ApChallengeMicroservice) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse20011ResultContentEvent', function() {
      beforeEach(function() {
        instance = new ApChallengeMicroservice.InlineResponse20011ResultContentEvent();
      });

      it('should create an instance of InlineResponse20011ResultContentEvent', function() {
        // TODO: update the code to test InlineResponse20011ResultContentEvent
        expect(instance).to.be.a(ApChallengeMicroservice.InlineResponse20011ResultContentEvent);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property eventDescription (base name: "eventDescription")', function() {
        // TODO: update the code to test the property eventDescription
        expect(instance).to.have.property('eventDescription');
        // expect(instance.eventDescription).to.be(expectedValueLiteral);
      });

      it('should have the property eventShortDesc (base name: "eventShortDesc")', function() {
        // TODO: update the code to test the property eventShortDesc
        expect(instance).to.have.property('eventShortDesc');
        // expect(instance.eventShortDesc).to.be(expectedValueLiteral);
      });

    });
  });

}));
